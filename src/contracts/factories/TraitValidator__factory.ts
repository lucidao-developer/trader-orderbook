/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TraitValidator,
  TraitValidatorInterface,
} from "../TraitValidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Trustus__InvalidPacket",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "request",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "PropertySet",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "propertyDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "request",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "request",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct Trustus.TrustusPacket",
        name: "packet",
        type: "tuple",
      },
    ],
    name: "setProperty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "propertyData",
        type: "bytes",
      },
    ],
    name: "validateProperty",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516107b13803806107b183398101604081905261002f91610105565b466080526100db604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f4fddeac0301e587e124c270ef73baebbfedaa619fd4476a3c9ed806f79df5a6e918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60a0526001600160a01b03166000908152602081905260409020805460ff19166001179055610135565b60006020828403121561011757600080fd5b81516001600160a01b038116811461012e57600080fd5b9392505050565b60805160a05161065761015a60003960006102240152600061014f01526106576000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631395c0f3146100515780633644e515146100665780635ea777ac14610080578063efff44f3146100a0575b600080fd5b61006461005f36600461046a565b6100b3565b005b61006e61014b565b60405190815260200160405180910390f35b61006e61008e3660046104ff565b60016020526000908152604090205481565b6100646100ae366004610518565b610246565b4260016000868686866040516020016100cf9493929190610566565b60405160208183030381529060405280519060200120815260200190815260200160002054116101455760405162461bcd60e51b815260206004820152601e60248201527f45787069726564206f7220696e6578697374656e742070726f70657274790000604482015260640160405180910390fd5b50505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146102215761021c604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f4fddeac0301e587e124c270ef73baebbfedaa619fd4476a3c9ed806f79df5a6e918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b61025082826102c4565b61026d57604051630e06dc0560e41b815260040160405180910390fd5b60008281526001602052604090819020608083013590819055905183917f02840d79a5b9f2afd4c7bec02bc927692c8e36368e763bc1c434feff7c07887a916102b891815260200190565b60405180910390a25050565b600081608001354211156102da57506000610464565b816060013583146102ed57506000610464565b600060016102f961014b565b7ffc7ecbf4f091085173dad8d1d3c2dfd218c018596a572201cd849763d1114e7a6060860135608087013561033160a0890189610599565b60405161033f9291906105e7565b60405190819003812061036d9493929160200193845260208401929092526040830152606082015260800190565b604051602081830303815290604052805190602001206040516020016103aa92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181529190528051602091820120906103cf908601866105f7565b604080516000815260208181018084529490945260ff9092168282015291860135606082015290850135608082015260a0016020604051602081039080840390855afa158015610423573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061046057506001600160a01b03811660009081526020819052604090205460ff165b9150505b92915050565b6000806000806060858703121561048057600080fd5b84356001600160a01b038116811461049757600080fd5b935060208501359250604085013567ffffffffffffffff808211156104bb57600080fd5b818701915087601f8301126104cf57600080fd5b8135818111156104de57600080fd5b8860208285010111156104f057600080fd5b95989497505060200194505050565b60006020828403121561051157600080fd5b5035919050565b6000806040838503121561052b57600080fd5b82359150602083013567ffffffffffffffff81111561054957600080fd5b830160c0818603121561055b57600080fd5b809150509250929050565b6bffffffffffffffffffffffff198560601b16815283601482015281836034830137600091016034019081529392505050565b6000808335601e198436030181126105b057600080fd5b83018035915067ffffffffffffffff8211156105cb57600080fd5b6020019150368190038213156105e057600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561060957600080fd5b813560ff8116811461061a57600080fd5b939250505056fea26469706673582212207dfcd57f77154d265cb0a90f0bbd3e14d34b892fd4102bdfdb937312c8534ad964736f6c634300080d0033";

type TraitValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TraitValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TraitValidator__factory extends ContractFactory {
  constructor(...args: TraitValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    oracleAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TraitValidator> {
    return super.deploy(
      oracleAddress,
      overrides || {}
    ) as Promise<TraitValidator>;
  }
  override getDeployTransaction(
    oracleAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(oracleAddress, overrides || {});
  }
  override attach(address: string): TraitValidator {
    return super.attach(address) as TraitValidator;
  }
  override connect(signer: Signer): TraitValidator__factory {
    return super.connect(signer) as TraitValidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TraitValidatorInterface {
    return new utils.Interface(_abi) as TraitValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TraitValidator {
    return new Contract(address, _abi, signerOrProvider) as TraitValidator;
  }
}
